# Code Generated by Sidekick is for learning and experimentation purposes only.

import streamlit as st
from src.langgraphagenticai.ui.uiconfigfile import Config

class LoadStreamlitUI:
    def __init__(self):
        self.config = Config()
        self.user_controls = {}

    def load_streamlit_ui(self):
        st.set_page_config(page_title="ðŸ“„ " + self.config.get_page_title(), layout="wide")
        st.header("ðŸ“„ " + self.config.get_page_title())

        llm_options = self.config.get_llm_options()
        usecase_options = self.config.get_usecase_options()

        self.user_controls["selected_llm"] = st.selectbox("Select LLM", llm_options)
        self.user_controls["selected_usecase"] = st.selectbox("Select Usecase", usecase_options)

        # --- Conditional PDF upload logic ---
        
        if self.user_controls["selected_usecase"] in ["PDF Q&A", "PDF Summarization"]:
            pdf_file = st.file_uploader("Upload PDF", type=["pdf"])
            self.user_controls["pdf_file"] = pdf_file
        elif self.user_controls["selected_usecase"] == "PDF Web Search":
            # No PDF upload shown at all
            self.user_controls["pdf_file"] = None
        else:
            self.user_controls["pdf_file"] = None
        # -------------------------------------

        if self.user_controls["selected_usecase"] == "PDF Web Search":
            self.user_controls["TAVILY_API_KEY"] = st.text_input("Tavily API Key", type="password")

        # Always prompt for Groq API key and model if Groq is selected
        if self.user_controls["selected_llm"] == 'Groq':
            groq_models = self.config.get_groq_model_options()
            self.user_controls["selected_groq_model"] = st.selectbox("Select Groq Model", groq_models)
            self.user_controls["GROQ_API_KEY"] = st.text_input("GROQ API Key", type="password")
            if not self.user_controls["GROQ_API_KEY"]:
                st.warning("Please enter your GROQ API key to proceed.")

        return self.user_controls

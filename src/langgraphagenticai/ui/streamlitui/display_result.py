# Code Generated by Sidekick is for learning and experimentation purposes only.

import streamlit as st
from src.langgraphagenticai.tools.pdf_tools import extract_text_from_pdf

class DisplayResultStreamlit:
    def __init__(self, usecase, graph, user_message, pdf_file):
        self.usecase = usecase
        self.graph = graph
        self.user_message = user_message
        self.pdf_file = pdf_file

    def display_result_on_ui(self):
        # Only require PDF for use cases that need it
        if self.usecase in ["PDF Q&A", "PDF Summarization"] and not self.pdf_file:
            st.warning("Please upload a PDF file.")
            return

        # Extract PDF content only if a PDF is provided
        pdf_content = extract_text_from_pdf(self.pdf_file) if self.pdf_file else None

        state = {
            "messages": [self.user_message],
            "pdf_content": pdf_content
        }

        result = self.graph.invoke(state)

        if self.usecase == "PDF Q&A":
            st.write("**Answer:**")
            st.write(result.get("answer", "No answer generated."))
        elif self.usecase == "PDF Summarization":
            st.write("**Summary:**")
            st.write(result.get("summary", "No summary generated."))
        elif self.usecase == "PDF Web Search":
            st.write("**Web Search Results:**")
            st.write(result.get("tool_results", "No results generated."))
